*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --flex-item-color: hsla(15, 29%, 97%, .7);
  --flex-item-border-color: rgb(165, 46, 119);
  --panel-border-color: #222;
  --header-color:#2ddf5c;
  --dark-green: hsl(120, 49%, 12%);
  --main-background-color: #666;
  --panel-background-color: #708090;
  --sub-panel-height: 452px;
  --panel-height: calc((var(--sub-panel-height) * 2) + 8px);
  --standard-box-shadow: 2px 3px 6px 0px rgba(41, 46, 81, 0.79);
}

html {
  font-family: sans-serif;
}

.main-wrapper{
  height:100vh;
  /* width:90vw; */
  margin: 0 auto;
}


/* Setting the section heights to a % requires we define the
height of their parent, which is the body. */
body {
  background-color: var(--main-background-color);
  /* height: 100vh; */
}
ul {
  list-style: none;
  /* display:inline-block; */
}

body,
div,
span,
ul{
  margin:0px;
  padding:0px;
}

.app-title{
  font-size: 1.3rem;
  vertical-align: middle;
}
.main-header{
  width:100%;
  background:var(--header-color);
  color: var(--dark-green);
  font-weight: bold;
  margin:2px 0px;
  padding:8px 14px;
  border-bottom:3px solid var(--dark-green);
}


/* nav, div, li are all block level elements */
.main-header > div,
.main-nav,
.main-nav-item {
  display:inline-block;
}

/* shift nav elements to far right, you need to specify a width */
.main-nav{
  text-align:right;
  vertical-align: middle;
  width:calc(100% - 220px);
}

.main-nav-item{
  margin:0px 12px;
}

.main-nav-item a{
  text-decoration:none;
  color:inherit;
  padding: 2px 8px;
  border-radius: 8px;
  border:1px solid var(--header-color);
}


.main-nav-item a:hover, 
.main-nav-item a:active {
  cursor:pointer;
  background:wheat;
  border:1px solid var(--dark-green);

}

/* Tool Tip Container */
.tooltip{
  position:relative;
  display:inline-block;
 
}

/* Tool Tip Text */
.tooltip .tooltip-text{
  visibility: hidden;
  width:120px;
  background-color: black;
  color:white;
  text-align: center;
  padding: 5px 0;
  border-radius:6px;
}

/* Positioning */
.tooltip{
  position:absolute;
  z-index:100;
}

.tooltip .showRight{
  top:-5px;
  left:105%;
}

.tooltip .showLeft{
  top:-5px;
  right:105%;
}

.tooltip .showTop{
  top:100%;
  left:50%;
  margin-left: -60px;  /* half the width*/
}


.tooltip:hover .tootooltip-text{
    visibility: visible;
}

/* ToolTip Arrow */
.tooltip .tooltip-text::after{
  content:'';
  position:absolute;
  top:100%;   /* at the top of the tooltip */
  left:50%;
  margin-left:5px;
  border-width: 5px;
  border-style: solid;
  border-color: black transparent transparent
}


/* Wrapper for both Settings blocks.  Since the main-wrapper is inline, and there is a block keeping to the left edge (CSS Result) block, we move this section to the right by using position:relative (to its original position)*/
/* Float:left allows positioning of an inline/inline-block element to the left side of the parent element.  Since the previous element in the DOM is a block level element, this <section> takes up the left edge of the second row of DOM elements */



/* Vertical-Align:top saved the entire layout from being ruined after I removed the overflow from the panels.   Whew */
.panel {
  display: inline-block;
  vertical-align: top;
  /* background-color: slategray; */
  border-radius:7px;
  /* width: 24%; */
  margin-left:12px;
  margin-top:4px;
 /* border: 1px solid red; */
  width: 304px;
  height: calc((var(--sub-panel-height) * 2) + 8px);
 
}

#portrait-panel{
  border: 1px solid var(--panel-border-color);
  background-color: var(--panel-background-color);
  box-shadow: var(--standard-box-shadow);
  height: calc((var(--sub-panel-height) * 2) + 8px);
  
}

#landscape-panel{
  
  width:calc(100vw - 990px);
  min-width:300px;
  
  background-color: var(--panel-background-color);
  /* height: calc((var(--sub-panel-height) * 2) + 8px); */
  border-radius:5px;
  box-shadow: var(--standard-box-shadow);
  resize:both;
}

.subPanel {
  display: inline-block;
  /* vertical-align: top; */
  background-color: var(--panel-background-color);
  margin-bottom:8px;
  border: 1px solid var(--panel-border-color);
  border-radius:5px;
  width: 300px;
  height: var(--sub-panel-height);
  min-width: 300px;
  max-width: 300px;
  box-shadow: var(--standard-box-shadow);
}



#css-panel {
  /* border: 1px solid red; */
  /* height:360px; */
  /* height:var(--panel-height); */
  min-width: 300px;
  max-width: none;
  /* width: calc(100% - 938px); */
  /* background-color: red; */
 
  /* background:indigo; */
  /* font-family: monospace; */
}



#css-output {
  font-family: monospace;
  font-weight:bold;
  font-size:1rem;
  height: calc(100% - 40px);
  /* border-bottom: 1px solid var(--panel-border-color); */
  overflow:scroll;
}

.button {
  display: inherit;
  width: 30%;
  max-width:6rem;
  margin-right: 5px;
  border-radius: 6px;
  padding: 4px 0px;
  cursor: pointer;
}

.button:hover,
.button:focus{
  cursor:pointer;
  background-color: wheat;
}

.button-set {
  position: relative;
  background: slategray;
  padding: 8px;
  padding-left: 12px;
  display: inline-block;
  width: 100%;
}

#flex-container-buttons {
  margin-top: 60px;
}




#flex-container-reset-button {
  float: right;
}

li.input-field,
li.dimensions {
  padding: 4px;
  width: 100%;
  display: inline-block;
}

li.input-field label {
  /* background:coral; */
  display: inherit;
  width: 130px;
}
li.input-field .setting-item {
  display: inherit;
  width: 148px;
}

li.dimensions > label {
  /* border:1px solid red; */
  display: inherit;
  width: 112px;
}

li.dimensions input[type='number'] {
  width: 50px;
}



/* Position absolute ignores DOM element ordering of elements and sets up a new positioning context where this element is positioned based on its nearest neighbor in the layout that has its position property set. */

#additional-css-text, 
#css-output{
  width: calc(100% - 8px);
  margin: 0px 4px;
  height: 356px;
  resize:none;
  overflow:auto;
}

#css-output{
  background:white;
  height: calc(100% - 40px);
}



/* Display:block us used for an otherwise inline element (<span>) in order to center the text inside the containing <section>  */
span.section-title {
  padding: 6px 0px;
  display: block;
  width: 100%;
  text-align: center;
  font-weight: bold;
  margin-bottom: 0.3rem;
  background-color: black;
  color: white;
}

/*I ended up wrapping the <textare> in a div.flex-items-settings-block in order to style each repeating block of controls used to manipulate individual flex-items in the parent layout.  The wrapping <div> needed to be reduced by 1.4rem to make up for the left margin set on the <ol> which effectively shifted the entire <ol> to the right, truncating the width of the <li> in the <ol> and their respetive contents. */
#flex-item-settings textarea {
  margin-top: 10px;
  width: 100%;
  overflow: scroll;
  text-align: center;
}

